@page "/DataGrid"
@inject HttpClient Http

<h1>Grades</h1>

<p>This component demonstrates my grades</p>

@if (Enrolments == null) {
    <div>Loading...</div>
} else { 
    <div><p>Antal kurser: @Enrolments.Count()</p> </div>
    <DxDataGrid Data="@Enrolments"
                VerticalScrollBarMode="@ScrollBarMode.Auto"
                VerticalScrollableHeight="300"
                PageSize="@Enrolments.Count()" 
                CssClass="mw-1100">
        <HeaderTemplate>
            <DxToolbar>
                <DxDataGridColumnChooserToolbarItem Alignment="ToolbarItemAlignment.Right" />
            </DxToolbar>
        </HeaderTemplate>
        <Columns>
            <DxDataGridColumn Field=@nameof(Enrolment.ID) Caption="ID" TextAlignment="@DataGridTextAlign.Center"/>
            <DxDataGridColumn Field=@nameof(Enrolment.Course) Caption="Course" />
            <DxDataGridColumn Field=@nameof(Enrolment.Grade) Caption="Grade" />
            <DxDataGridColumn Field=@nameof(Enrolment.AvgGradeClass) Caption="Avg. Grade Class" />
            <DxDataGridColumn Field=@nameof(Enrolment.DifAvg) Caption="Difference Avg. Grade Class" />
        </Columns>
    </DxDataGrid>

    <DxChart Data="@Enrolments"
         LabelOverlap="ChartLabelOverlap.Hide"
         CssClass="mw-1100">
        <DxChartTitle Text="Sales amount" />

        <DxChartCommonSeries
            AggregationMethod="@Enumerable.Sum"
            NameField="@((Enrolment s) => s.Date.Year)" 
            ArgumentField="@((Enrolment s) => s.Term)" 
            ValueField="@((Enrolment s) => s.Grade)">

            <SeriesTemplate Context="settings">
                @if(settings.GroupKey == 2019) {
                    <DxChartLineSeries Name="Last year" Settings="@settings">
                    </DxChartLineSeries>
                } else {
                    <DxChartBarSeries Settings="@settings">
                        <DxChartSeriesLabel Visible="true"></DxChartSeriesLabel>
                    </DxChartBarSeries>
                }
            </SeriesTemplate>
        </DxChartCommonSeries>
    </DxChart>

    <DxPivotGrid Data="@Enrolments">
        <DxPivotGridField Field="@nameof(Enrolment.Term)" SortOrder="@PivotGridSortOrder.Ascending" Area="@PivotGridFieldArea.Row"></DxPivotGridField>
        <DxPivotGridField Field="@nameof(Enrolment.Course)" Area="@PivotGridFieldArea.Row"></DxPivotGridField>

        <DxPivotGridField Field="@nameof(Enrolment.Grade)" Area="@PivotGridFieldArea.Data" SummaryType="@PivotGridSummaryType.Avg"></DxPivotGridField>
        <DxPivotGridField Field="@nameof(Enrolment.ECTS)" Area="@PivotGridFieldArea.Data" SummaryType="@PivotGridSummaryType.Sum"></DxPivotGridField>
    </DxPivotGrid>

}

@code {
    private IEnumerable<Enrolment> Enrolments;

    protected override async Task OnInitializedAsync() {
        Enrolments = await Http.GetFromJsonAsync<IEnumerable<Enrolment>>("sample-data/grades.json");
    }

    public class Enrolment {
        public int ID { get; set; }
        public int ECTS { get; set; }
        public string Course { get; set; } 
        public string Term { get; set; }
        public DateTime Date { get; set; }
        public int Year { get; set; }
        public string IntlGrade { get; set; }
        public int Grade { get; set; }
        public double AvgGradeClass { get; set; }
        public double DifAvg { get; set; }
    }
}